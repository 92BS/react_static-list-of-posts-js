{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","trim","CommentList","comments","length","map","id","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,QCJGC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBF,EAAsBE,EAAtBF,KAAMD,EAAgBG,EAAhBH,MAAOI,EAASD,EAATC,KAErB,OACE,+BACE,sBAAKN,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCG,IAEtC,OAED,mBACEH,UAAU,qBACVC,KAAI,iBAAYC,GAFlB,SAIGA,OAIL,qBAAKF,UAAU,oBAAf,SACGM,EAAKC,eCjBHC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKT,UAAU,cAAf,SACGS,EAASC,OAAS,EACfD,EAASE,KAAI,SAAAN,GAAO,OACpB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQO,OAE5C,mBAAG,UAAQ,oBAAX,iCCLKC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKd,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCc,EAAKC,QAEtC,8BACG,eAED,cAAC,EAAD,CAAUhB,KAAMe,EAAKf,aAIzB,mBAAGC,UAAU,iBAAb,SACGc,EAAKR,OAER,cAAC,EAAD,CAAaG,SAAUK,EAAKL,gBCjBnBO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKjB,UAAU,WAAf,SACGiB,EAAMN,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCY/B,IAAMK,EAAQC,EAAgBP,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cf,MAZmBoB,EAYDL,EAAKK,OAXhBC,EAAgBC,MAAK,SAAAtB,GAAI,OAAIA,EAAKa,KAAOO,MACzC,MAWPV,UARuBG,EAQGE,EAAKF,GAPxBU,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQmB,SAAWZ,MACxD,QAFT,IAAyBA,EALJO,KAgBRM,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUiB,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.020e7a0e.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <span>\n      <div className=\"CommentInfo\">\n        <div className=\"CommentInfo__title\">\n          <strong className=\"CommentInfo__name\">{name}</strong>\n\n          {' by '}\n\n          <a\n            className=\"CommentInfo__email\"\n            href={`mailto:${email}`}\n          >\n            {email}\n          </a>\n        </div>\n\n        <div className=\"CommentInfo__body\">\n          {body.trim()}\n        </div>\n      </div>\n    </span>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length > 0\n      ? comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n      : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      }\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(id) {\n  return commentsFromServer.filter(comment => comment.postId === id)\n      || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}